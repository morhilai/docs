# Security: Overview

In the security section, we will review the security features in RavenDB and explain how to manage your secured server or cluster.

{PANEL:Authentication}

RavenDB uses X.509 certificate-based authentication. 
X.509 certificates are standardized, secured and widely used in many applications. They allow you to use TLS/SSL and HTTPS which keeps your communications encrypted and secured.

The idea of authentication in RavenDB is based on a fact that the server holds a server certificate, which is either signed by a trusted SSL Certificate Authority or self-signed. The server certificate is used by an administrator to generate client certificates with assigned permissions. Client certificates can be used for authentication, and authorization is granted according to the assigned permissions.

{WARNING:Important}
RavenDB will allow access only to client certificates which are explicitly registered in the server and will not trust any other certificates (even if existing PKI infrastructure allows them). Registering a certificate means one of two things: either the certificate was generated by the server or it was uploaded by an administrator. In any case, it must appear in the certificates view in the studio. Visit the [Certificate Management](authentication/certificate-management) section for more information.
{WARNING/}

In the Studio, administrators can use the [Certificates View](../../server/security/authentication/certificate-configuration) to easily manage their certificates. It can be used to generate client certificates, register existing client certificates, import and export server certificates, rename, assign permissions and more.

**Read more:**

- [Manual Certificate Configuration](../../server/security/authentication/certificate-configuration)
- [Certificate Management](../../server/security/authentication/certificate-management)
- [Client Certificate Usage](../../server/security/authentication/client-certificate-usage)
- [Certificate Renewal & Rotation](../../server/security/authentication/certificate-renewal-and-rotation)
- [Let's Encrypt Certificates](../../server/security/authentication/lets-encrypt-certificates)
- [Common Errors & FAQ](../../server/security/common-errors-and-faq)

{PANEL/}

{PANEL:Authorization}

Authorization in RavenDB is based on the same X.509 certificates.

Every client certificate is associated with a security clearance and access permissions per database. 

**Read more:**

- [Security Clearance & Permissions](../../server/security/authorization/security-clearance-and-permissions)

{PANEL/}

{PANEL:Encryption}

RavenDB offers full database encryption using [libsodium](https://download.libsodium.org/doc/), a well-known battle tested encryption library. 

Encryption is implemented at the storage level, with XChaCha20-Poly1305 authenticated encryption using 256 bit keys. 

When database encryption is on, all the features of a database are automatically encrypted - documents, indexes and every piece of data that is written to disk.

**Read more:**

- [Encryption at Rest](../../server/security/encryption/encryption-at-rest)
- [Database Encryption](../../server/security/encryption/database-encryption)
- [Server Store Encryption](../../server/security/encryption/server-store-encryption)
- [Secret Key Management](../../server/security/encryption/secret-key-management)

{PANEL/}

## Related articles

### Security 

- [Common Errors and FAQ](../../server/security/common-errors-and-faq)

### Client API

- [Setting up Authentication and Authorization](../../client-api/setting-up-authentication-and-authorization)

### Installation

- [Secure Setup with a Let's Encrypt Certificate](../../start/installation/setup-wizard#secure-setup-with-a-let)
- [Secure Setup with Your Own Certificate](../../start/installation/setup-wizard#secure-setup-with-your-own-certificate)

### Configuration

- [Security Configuration](../../server/configuration/security-configuration)
